from flask import request, jsonify
from switchmap.server.db.models import InterfaceUsageHistory as InterfaceUsageHistoryModel
from switchmap.server.db.models import db_session  # Your DB session
from sqlalchemy import and_

@API_POST.route("/api/interfaces/<int:interface_id>/usage", methods=["GET"])
def get_interface_usage(interface_id):
    """
    Return interface usage history for a given interface ID.

    Query Params:
        start (ISO format): Start timestamp
        end (ISO format): End timestamp

    Returns:
        JSON list of usage points
    """
    # Parse query parameters
    try:
        start = request.args.get("start")
        end = request.args.get("end")
        if not start or not end:
            return jsonify({"error": "Missing 'start' or 'end' query parameters"}), 400

        from datetime import datetime
        start_dt = datetime.fromisoformat(start)
        end_dt = datetime.fromisoformat(end)

    except Exception as e:
        return jsonify({"error": f"Invalid datetime format: {str(e)}"}), 400

    # Query usage data
    results = (
        db_session.query(InterfaceUsageHistoryModel)
        .filter(
            InterfaceUsageHistoryModel.interface_id == interface_id,
            InterfaceUsageHistoryModel.timestamp >= start_dt,
            InterfaceUsageHistoryModel.timestamp <= end_dt,
        )
        .order_by(InterfaceUsageHistoryModel.timestamp.asc())
        .all()
    )

    # Build response
    usage_data = [
        {
            "timestamp": row.timestamp.isoformat(),
            "in_bw": row.in_bw,
            "out_bw": row.out_bw,
            "utilization_pct": row.utilization_pct,
        }
        for row in results
    ]

    return jsonify(usage_data)
