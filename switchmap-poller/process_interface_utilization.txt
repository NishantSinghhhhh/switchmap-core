from datetime import datetime
from sqlalchemy.orm import Session
from models import InterfaceUsageHistory, InterfaceTrafficHistory
from sqlalchemy import desc

def process_interface_utilization(session: Session, interface_id: int, data: dict, timestamp: datetime):
    in_octets, out_octets, if_speed = data.get("in_octets"), data.get("out_octets"), data.get("if_speed")
    if None in (in_octets, out_octets, if_speed):
        return

    last = session.query(InterfaceTrafficHistory).filter_by(interface_id=interface_id).order_by(desc(InterfaceTrafficHistory.timestamp)).first()

    if last:
        delta_t = (timestamp - last.timestamp).total_seconds()
        delta_in, delta_out = in_octets - last.in_bytes, out_octets - last.out_bytes
        if delta_t > 0 and delta_in >= 0 and delta_out >= 0:
            in_bps, out_bps = (delta_in * 8) / delta_t, (delta_out * 8) / delta_t
            util_pct = max((in_bps / if_speed) * 100, (out_bps / if_speed) * 100)
            session.add(InterfaceUsageHistory(interface_id=interface_id, timestamp=timestamp, in_bw=in_bps, out_bw=out_bps, utilization_pct=util_pct))

    session.add(InterfaceTrafficHistory(
        interface_id=interface_id,
        timestamp=timestamp,
        in_bytes=in_octets,
        out_bytes=out_octets,
        in_pkts=data.get("in_ucast_pkts", 0),
        out_pkts=data.get("out_ucast_pkts", 0),
        in_errors=data.get("in_errors", 0),
        out_errors=data.get("out_errors", 0),
    ))
    session.commit()
